extends CharacterBody3D

const ROTATE_SPEED = 4.0
#const Rotate_Pan_Speed = 0.005

var SPEED = 5.0
var JUMP_VELOCITY = 3
var input_dir : Vector2

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = 10


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	var rotate_dir = Input.get_axis("left", "right")
	input_dir = Input.get_vector("left","right","forward","back")
	rotate_y(-rotate_dir*ROTATE_SPEED*delta)

	# Handle jump.
	if Input.is_action_just_pressed("jump") and is_on_floor():
		velocity.y = JUMP_VELOCITY
		

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector("left", "right", "forward", "back")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)
	
	move_and_slide()
